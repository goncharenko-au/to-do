{"version":3,"sources":["action/index.js","components/ButtonDone.jsx","components/ButtonDelete.jsx","components/Post.jsx","components/Date.jsx","App.js","reducer/index.js","store/index.js","index.js"],"names":["addPost","value","type","payload","ButtonDone","className","onDone","onClick","ButtonDelete","onDelete","Post","props","dispatch","useDispatch","children","name","done","id","DateTodo","date","Date","addedZero","correction","resultValue","useState","toLocaleTimeString","time","setTime","useEffect","setInterval","curDate","getDate","curMonth","getMonth","getFullYear","getCurDate","App","posts","useSelector","state","postReducer","setValue","getPost","localStorage","setItem","JSON","stringify","onChange","e","target","onKeyDown","code","console","log","length","map","item","Math","round","random","defaultState","parse","getItem","ADD_POST","UPDATE_DONE","DELETE_POST","rootReducer","combineReducers","action","slice","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b86e6637.chunk.js","sourcesContent":["const addPost = (value) => ({\r\n    type: \"ADD_POST\",\r\n    payload: value\r\n})\r\n\r\nexport default addPost;\r\n\r\nexport const updateDone = (data) => ({\r\n    type: \"UPDATE_DONE\",\r\n    payload: data\r\n})\r\n\r\nexport const deletePost = (id) => ({\r\n    type: \"DELETE_POST\",\r\n    payload: id\r\n})","export default function ButtonDone({ className, onDone }) {\r\n\r\n    return (\r\n        <div className={className} onClick={() => onDone()}></div>\r\n    )\r\n\r\n}","export default function ButtonDelete({ className, onDelete }) {\r\n\r\n    return (\r\n        <div className={className} onClick={() => onDelete()}></div>\r\n    )\r\n\r\n}","import { useDispatch } from \"react-redux\";\r\nimport { updateDone } from \"../action\";\r\nimport ButtonDone from \"./ButtonDone\";\r\nimport ButtonDelete from \"./ButtonDelete\";\r\nimport { deletePost } from './../action/index';\r\n\r\n\r\nexport default function Post(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const changeDone = () => {\r\n        dispatch(updateDone(props));\r\n    }\r\n\r\n    const deleteMyPost = () => {\r\n        dispatch(deletePost(props.id));\r\n    };\r\n    const { name, done } = props.children;\r\n\r\n    return (\r\n        <div className=\"field__block\">\r\n            <div className=\"field__block-inner\">\r\n                <div className={!done ? \"field__block-text\" : \"field__block-text done\"} >\r\n                    {name}\r\n                </div>\r\n                <div className=\"field__block-buttons\">\r\n                    <ButtonDone className={!done ? \"field__block-btn btn-done\" : \"field__block-btn btn-done_check\"}\r\n                        onDone={changeDone}\r\n                    />\r\n                    <ButtonDelete className=\"field__block-btn btn-delete\"\r\n                        onDelete={deleteMyPost}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function DateTodo() {\r\n    const date = new Date();\r\n\r\n    function addedZero(value, correction = 0) {\r\n        const resultValue = value + correction;\r\n        if (resultValue <= 9) {\r\n            return `0${resultValue}`;\r\n        } else {\r\n            return resultValue;\r\n        }\r\n    }\r\n\r\n    const getCurDate = () => {\r\n        let curDate = addedZero(date.getDate());\r\n        let curMonth = addedZero(date.getMonth(), 1);\r\n        return `${curDate}.${curMonth}.${date.getFullYear()}`;\r\n    };\r\n\r\n    const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n\r\n    useEffect(() => {\r\n        setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n    }, [setTime]);\r\n    return (\r\n        <>\r\n            <div className=\"field__date\">\r\n                {getCurDate()}</div>\r\n            <div className=\"field__time\">\r\n                {time}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './App.scss';\nimport Post from './components/Post';\nimport DateTodo from './components/Date';\nimport addPost from './action';\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.postReducer.posts);\n\n  const [value, setValue] = useState(\"\");\n  const newPost = (e) => {\n    setValue(e.target.value);\n  };\n\n  const getPost = () => {\n    if (value) {\n      dispatch(addPost({ name: value, done: false }));\n    }\n    setValue(\"\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"field\">\n          <div className=\"field__inner\">\n            <h1 className=\"field__title\">TODO list </h1>\n            <div className=\"field__wrap\">\n              <DateTodo />\n            </div>\n\n            <div className=\"field__header\">\n              <input className=\"field__input\" value={value} onChange={newPost}\n                onKeyDown={(e) => e.code === \"Enter\" && value !== \"\" ? getPost() : null} />\n              <button className=\"field__btn\" onClick={() => getPost()}\n                onKeyDown={(e) => console.log(e)}\n              >Добавить</button>\n            </div>\n            {posts.length > 0 ?\n              <div>\n                {\n                  posts.map((item, id) => <Post id={id} key={Math.round(Math.random() * 100000)}>{item}</Post>)\n                }\n              </div>\n              :\n              <div className=\"field__block-alttext\">Список дел пуст...</div>\n            }\n          </div>\n        </div>\n      </div >\n    </div>\n  );\n};","import { combineReducers } from \"redux\";\r\n\r\nconst defaultState = {\r\n    posts: JSON.parse(localStorage.getItem(\"posts\"))\r\n};\r\n\r\n\r\nconst ADD_POST = \"ADD_POST\",\r\n    UPDATE_DONE = \"UPDATE_DONE\",\r\n    DELETE_POST = \"DELETE_POST\";\r\n\r\nconst postReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return { ...state, posts: [...state.posts, action.payload] };\r\n        case UPDATE_DONE:\r\n            return {\r\n                ...state, posts: [...state.posts.slice(0, action.payload.id), { ...action.payload.children, done: !action.payload.children.done }, ...state.posts.slice(action.payload.id + 1)]\r\n            };\r\n        case DELETE_POST:\r\n            return { ...state, posts: [...state.posts.slice(0, action.payload), ...state.posts.slice(action.payload + 1)] }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    postReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./../reducer\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"../src/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}