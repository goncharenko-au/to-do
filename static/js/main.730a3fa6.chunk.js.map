{"version":3,"sources":["action/index.js","components/ButtonDone.jsx","components/ButtonDelete.jsx","components/Post.jsx","components/Field.jsx","components/Date.jsx","components/Geo.jsx","components/Time.jsx","components/Sidebar.jsx","App.js","reducer/postReducer.jsx","reducer/index.js","store/index.js","index.js"],"names":["addPost","value","type","payload","ButtonDone","className","onDone","onClick","ButtonDelete","onDelete","Post","props","dispatch","useDispatch","children","name","done","id","deletePost","Input","useState","setValue","getPost","onChange","e","target","onKeyDown","code","console","log","DateTodo","convertDate","convertDay","date","Date","getDate","getCurrentDate","month","getMonth","key","getCurrentMonth","day","getDay","getCurrentDay","Geo","React","memo","data","setData","TOKEN","defaultLat","useEffect","Promise","resolve","navigator","geolocation","getCurrentPosition","pos","crd","coords","then","coord","lat","lon","token","axios","res","getApiData","latitude","longitude","currentTemperature","main","temp","toFix","toFixed","getCurrentTemperature","currentCity","Time","toLocaleTimeString","time","setTime","timerId","setInterval","clearInterval","Sidebar","App","posts","useSelector","state","postReducer","localStorage","setItem","JSON","stringify","length","map","item","defaultState","getItem","parse","ADD_POST","UPDATE_DONE","DELETE_POST","rootReducer","combineReducers","action","slice","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"iMAKeA,EALC,SAACC,GAAD,MAAY,CACxBC,KAAM,WACNC,QAASF,I,OCFE,SAASG,EAAT,GAA4C,IAAtBC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OAE5C,OACI,qBAAKD,UAAWA,EAAWE,QAAS,kBAAMD,OCHnC,SAASE,EAAT,GAAgD,IAAxBH,EAAuB,EAAvBA,UAAWI,EAAY,EAAZA,SAE9C,OACI,qBAAKJ,UAAWA,EAAWE,QAAS,kBAAME,OCInC,SAASC,EAAKC,GACzB,IAAMC,EAAWC,cAEjB,EAAuBF,EAAMG,SAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNC,EAAON,EAAPM,GASR,OACI,qBAAKZ,UAAU,eAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAYW,EAA6B,yBAAtB,oBAAxB,SACKD,IAEL,sBAAKV,UAAU,uBAAf,UACI,cAACD,EAAD,CAAYC,UAAYW,EAAqC,kCAA9B,4BAC3BV,OAfD,WACfM,EHP6B,CACjCV,KAAM,cACNC,QGKwBQ,OAgBR,cAACH,EAAD,CAAcH,UAAU,8BACpBI,SAdC,WACjBG,EHNkB,SAACK,GAAD,MAAS,CAC/Bf,KAAM,cACNC,QAASc,GGIIC,CAAWD,e,WCdb,SAASE,IACpB,IAAMP,EAAWC,cACjB,EAA0BO,mBAAS,IAAnC,mBAAOnB,EAAP,KAAcoB,EAAd,KAMMC,EAAU,WACRrB,GACAW,EAASZ,EAAQ,CAAEe,KAAMd,EAAOe,MAAM,KAE1CK,EAAS,KAGb,OACI,qCACI,uBAAOhB,UAAU,eAAeJ,MAAOA,EAAOsB,SAbtC,SAACC,GACbH,EAASG,EAAEC,OAAOxB,QAaVyB,UAAW,SAACF,GAAD,MAAkB,UAAXA,EAAEG,MAA8B,KAAV1B,EAAeqB,IAAY,QACvE,wBAAQjB,UAAU,aAAaE,QAAS,kBAAMe,KAC1CI,UAAW,SAACF,GAAD,OAAOI,QAAQC,IAAIL,IADlC,iECrBG,SAASM,IACpB,IAAMC,EAAc,CAChB,EAAK,uCACL,EAAK,6CACL,EAAK,iCACL,EAAK,uCACL,EAAK,qBACL,EAAK,2BACL,EAAK,2BACL,EAAK,6CACL,EAAK,mDACL,GAAM,6CACN,GAAM,uCACN,GAAM,8CAEJC,EAAa,CACf,EAAK,qEACL,EAAK,qEACL,EAAK,6CACL,EAAK,iCACL,EAAK,6CACL,EAAK,6CACL,EAAK,8CA4BT,OACI,8BACI,qBAAK3B,UAAU,cAAf,mBA3BR,WACI,IAAI4B,GAAO,IAAIC,MAAOC,UACtB,OAAIF,GAAQ,EACF,IAAN,OAAWA,GAEJA,EAuBCG,GADR,YAnBR,WACI,IAAIC,GAAS,IAAIH,MAAOI,WAAc,EACtC,IAAK,IAAIC,KAAOR,EACZ,GAAIM,GAASE,EACT,OAAOR,EAAYQ,GAgBKC,GAD5B,aAXR,WACI,IAAIC,GAAM,IAAIP,MAAOQ,SACrB,IAAK,IAAIH,KAAOP,EACZ,GAAIS,GAAOF,EACP,OAAOP,EAAWO,GAQ4BI,Q,qBCP/CC,EA3CHC,IAAMC,MAAK,WACnB,MAAwB1B,mBAAS,IAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KAEMC,EAAQ,mCACRC,EAAa,QAOnBC,qBAAU,WACN,IAAIC,SAAQ,SAACC,GACTC,UAAUC,YAAYC,oBACtB,SAAiBC,GACb,IAAIC,EAAMD,EAAIE,OACdN,EAAQK,SAEbE,MAAK,SAAAC,GAAK,OAZjB,WAAwE,IAApDC,EAAmD,uDAA7CZ,EAAYa,EAAiC,uDADpD,KACqCC,EAAe,uDAAPf,EAC5DgB,IAAM,uDAAD,OAAwDH,EAAxD,gBAAmEC,EAAnE,kBAAgFC,EAAhF,0BACAJ,MAAK,SAAAM,GAAG,OAAIlB,EAAQkB,EAAInB,SAUZoB,CAAWN,EAAMO,SAAUP,EAAMQ,gBACnD,IAaH,IAAMC,EAAqBvB,EAAKwB,MAXhC,SAA+BC,GAC3B,IAAMC,EAAQD,EAAKE,QAAQ,GAC3B,OAAID,EAAQ,EACF,IAAN,OAAWA,EAAX,UACOA,EAAQ,EACT,IAAN,OAAWA,EAAX,UAEM,GAAN,OAAUA,EAAV,UAIgCE,CAAsB5B,EAAKwB,KAAKC,MAClEI,EAAc7B,GAAQA,EAAKhC,KAEjC,OACI,gCACI,sFAAiB6D,KACjB,kJAA2B,sBAAMvE,UAAU,cAAhB,SAA+BiE,aCzCvD,SAASO,IACpB,MAAwBzD,oBAAS,IAAIc,MAAO4C,sBAA5C,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OAJA7B,qBAAU,WACN,IAAI8B,EAAUC,aAAY,kBAAMF,GAAQ,IAAI9C,MAAO4C,wBAAuB,KAC1E,OAAO,kBAAMK,cAAcF,MAC5B,CAACF,IAEA,mCACI,qBAAK1E,UAAU,OAAf,SAAuB0E,MCLnC,IASeK,EATCvC,IAAMC,MAAK,WACvB,OACI,sBAAKzC,UAAU,UAAf,UACI,cAAC,EAAD,IACA,cAACwE,EAAD,IACA,cAAC,EAAD,U,MCHG,SAASQ,IACtB,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,SAMrD,OAJAnC,qBAAU,WACRuC,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,MAC5C,CAACA,IAGF,qBAAKjF,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,eAAd,wBACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,MAEDiF,EAAMQ,OAAS,EACd,8BAEIR,EAAMS,KAAI,SAACC,EAAM/E,GAAP,OAAc,cAACP,EAAD,CAAMO,GAAIA,EAAV,SAAyC+E,GAAzC,UAAsBA,EAAKjF,MAA3B,OAAkCE,SAI9D,qBAAKZ,UAAU,uBAAf,sGAIN,cAAC,EAAD,S,0BClCF4F,EAAe,CACjBX,MAAQI,aAAaQ,QAAQ,SAAgBN,KAAKO,MAAMT,aAAaQ,QAAQ,UAArC,IAEtCE,EAAW,WACbC,EAAc,cACdC,EAAc,cCEHC,EAJKC,YAAgB,CAChCf,YDGuB,WAAmC,IAAlCD,EAAiC,uDAAzBS,EAAcQ,EAAW,uCACzD,OAAQA,EAAOvG,MACX,KAAKkG,EACD,OAAO,2BACAZ,GADP,IAEIF,MAAM,GAAD,mBAAME,EAAMF,OAAZ,CAAmBmB,EAAOtG,YAEvC,KAAKkG,EACD,OAAO,2BACAb,GADP,IACcF,MAAM,GAAD,mBAAME,EAAMF,MAAMoB,MAAM,EAAGD,EAAOtG,QAAQc,KAA1C,4BACVwF,EAAOtG,QAAQW,UADL,IACeE,MAAOyF,EAAOtG,QAAQW,SAASE,QAD9C,YAEZwE,EAAMF,MAAMoB,MAAMD,EAAOtG,QAAQc,GAAK,OAEjD,KAAKqF,EACD,OAAO,2BACAd,GADP,IACcF,MAAM,GAAD,mBAAME,EAAMF,MAAMoB,MAAM,EAAGD,EAAOtG,UAAlC,YACZqF,EAAMF,MAAMoB,MAAMD,EAAOtG,QAAU,OAE9C,QACI,OAAOqF,MEtBJmB,EADDC,YAAYL,GCI1BM,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.730a3fa6.chunk.js","sourcesContent":["const addPost = (value) => ({\r\n    type: \"ADD_POST\",\r\n    payload: value\r\n})\r\n\r\nexport default addPost;\r\n\r\nexport const updateDone = (data) => ({\r\n    type: \"UPDATE_DONE\",\r\n    payload: data\r\n})\r\n\r\nexport const deletePost = (id) => ({\r\n    type: \"DELETE_POST\",\r\n    payload: id\r\n})\r\n\r\n","export default function ButtonDone({ className, onDone }) {\r\n\r\n    return (\r\n        <div className={className} onClick={() => onDone()}></div>\r\n    )\r\n\r\n}","export default function ButtonDelete({ className, onDelete }) {\r\n\r\n    return (\r\n        <div className={className} onClick={() => onDelete()}></div>\r\n    )\r\n\r\n}","import { useDispatch } from \"react-redux\";\r\nimport { updateDone } from \"../action\";\r\nimport ButtonDone from \"./ButtonDone\";\r\nimport ButtonDelete from \"./ButtonDelete\";\r\nimport { deletePost } from './../action/index';\r\n\r\n\r\nexport default function Post(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const { name, done } = props.children;\r\n    const { id } = props;\r\n\r\n    const changeDone = () => {\r\n        dispatch(updateDone(props));\r\n    }\r\n\r\n    const deleteMyPost = () => {\r\n        dispatch(deletePost(id));\r\n    };\r\n    return (\r\n        <div className=\"field__block\">\r\n            <div className=\"field__block-inner\">\r\n                <div className={!done ? \"field__block-text\" : \"field__block-text done\"} >\r\n                    {name}\r\n                </div>\r\n                <div className=\"field__block-buttons\">\r\n                    <ButtonDone className={!done ? \"field__block-btn btn-done\" : \"field__block-btn btn-done_check\"}\r\n                        onDone={changeDone}\r\n                    />\r\n                    <ButtonDelete className=\"field__block-btn btn-delete\"\r\n                        onDelete={deleteMyPost}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport addPost from '../action';\r\n\r\nexport default function Input() {\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const newPost = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const getPost = () => {\r\n        if (value) {\r\n            dispatch(addPost({ name: value, done: false }));\r\n        }\r\n        setValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input className=\"field__input\" value={value} onChange={newPost}\r\n                onKeyDown={(e) => e.code === \"Enter\" && value !== \"\" ? getPost() : null} />\r\n            <button className=\"field__btn\" onClick={() => getPost()}\r\n                onKeyDown={(e) => console.log(e)}\r\n            >Добавить</button>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function DateTodo() {\r\n    const convertDate = {\r\n        \"1\": \"января\",\r\n        \"2\": \"февраля\",\r\n        \"3\": \"марта\",\r\n        \"4\": \"апреля\",\r\n        \"5\": \"мая\",\r\n        \"6\": \"июня\",\r\n        \"7\": \"июля\",\r\n        \"8\": \"августа\",\r\n        \"9\": \"сентября\",\r\n        \"10\": \"октября\",\r\n        \"11\": \"ноября\",\r\n        \"12\": \"декабря\"\r\n    }\r\n    const convertDay = {\r\n        \"0\": \"воскресенье\",\r\n        \"1\": \"понедельник\",\r\n        \"2\": \"вторник\",\r\n        \"3\": \"среда\",\r\n        \"4\": \"четверг\",\r\n        \"5\": \"пятница\",\r\n        \"6\": \"суббота\"\r\n    }\r\n\r\n    function getCurrentDate() {\r\n        let date = new Date().getDate();\r\n        if (date <= 9) {\r\n            return `0${date}`\r\n        } else {\r\n            return date;\r\n        }\r\n    }\r\n    function getCurrentMonth() {\r\n        let month = (new Date().getMonth()) + 1;\r\n        for (let key in convertDate) {\r\n            if (month == key) {\r\n                return convertDate[key];\r\n            }\r\n        };\r\n    }\r\n    function getCurrentDay() {\r\n        let day = new Date().getDay();\r\n        for (let key in convertDay) {\r\n            if (day == key) {\r\n                return convertDay[key];\r\n            }\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"field__date\">\r\n                {`${getCurrentDate()} ${getCurrentMonth()}, ${getCurrentDay()}`}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Geo = React.memo(function () {\r\n    const [data, setData] = useState({});\r\n\r\n    const TOKEN = \"4fc583d48566ceb93d0b13f78df16546\";\r\n    const defaultLat = 50.2716;\r\n    const defaultLon = 30.30;\r\n    function getApiData(lat = defaultLat, lon = defaultLon, token = TOKEN) {\r\n        axios(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${token}&lang=ru&units=metric`)\r\n            .then(res => setData(res.data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        new Promise((resolve) => {\r\n            navigator.geolocation.getCurrentPosition(success);\r\n            function success(pos) {\r\n                let crd = pos.coords;\r\n                resolve(crd);\r\n            }\r\n        }).then(coord => getApiData(coord.latitude, coord.longitude));\r\n    }, []);\r\n\r\n    function getCurrentTemperature(temp) {\r\n        const toFix = temp.toFixed(0);\r\n        if (toFix > 0) {\r\n            return `+${toFix} °C`;\r\n        } else if (toFix < 0) {\r\n            return `-${toFix} °C`;\r\n        } else {\r\n            return `${toFix} °C`;\r\n        }\r\n    }\r\n\r\n    const currentTemperature = data.main && getCurrentTemperature(data.main.temp);\r\n    const currentCity = data && data.name;\r\n\r\n    return (\r\n        <div >\r\n            <div>Ваш город: {currentCity}</div>\r\n            <div >Температура воздуха: <span className=\"temperature\">{currentTemperature}</span></div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Geo;","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Time() {\r\n    const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    useEffect(() => {\r\n        let timerId = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(timerId);\r\n    }, [time]);\r\n    return (\r\n        <>\r\n            <div className=\"time\">{time}</div>\r\n        </>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport Date from \"./Date\";\r\nimport Geo from \"./Geo\";\r\nimport Time from \"./Time\";\r\n\r\nconst Sidebar = React.memo(function () {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Date />\r\n            <Time />\r\n            <Geo />\r\n        </div>\r\n    )\r\n});\r\nexport default Sidebar;","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Post from './components/Post';\nimport Field from './components/Field';\nimport Sidebar from './components/Sidebar';\nimport './App.scss';\n\nexport default function App() {\n  const posts = useSelector(state => state.postReducer.posts);\n\n  useEffect(() => {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"field\">\n          <div className=\"field__inner\">\n            <h1 className=\"field__title\">TODO list </h1>\n            <div className=\"field__header\">\n              <Field />\n            </div>\n            {posts.length > 0 ?\n              <div>\n                {\n                  posts.map((item, id) => <Post id={id} key={`${item.name}${id}`}>{item}</Post>)\n                }\n              </div>\n              :\n              <div className=\"field__block-alttext\">Список дел пуст...</div>\n            }\n          </div>\n        </div>\n        <Sidebar />\n\n      </div >\n\n    </div>\n  );\n};","const defaultState = {\r\n    posts: !localStorage.getItem(\"posts\") ? [] : JSON.parse(localStorage.getItem(\"posts\"))\r\n}\r\nconst ADD_POST = \"ADD_POST\",\r\n    UPDATE_DONE = \"UPDATE_DONE\",\r\n    DELETE_POST = \"DELETE_POST\";\r\n\r\nexport const postReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, action.payload]\r\n            };\r\n        case UPDATE_DONE:\r\n            return {\r\n                ...state, posts: [...state.posts.slice(0, action.payload.id),\r\n                { ...action.payload.children, done: !action.payload.children.done },\r\n                ...state.posts.slice(action.payload.id + 1)]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state, posts: [...state.posts.slice(0, action.payload),\r\n                ...state.posts.slice(action.payload + 1)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { postReducer } from \"./postReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    postReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./../reducer\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport store from \"../src/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}